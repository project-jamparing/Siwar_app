generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model iuran {
  id            Int           @id @default(autoincrement()) @db.UnsignedInt
  nama          String        @db.VarChar(100)
  deskripsi     String        @db.VarChar(255)
  nominal       Decimal       @db.Decimal(12, 2)
  tanggal_nagih DateTime      @db.Date
  tanggal_tempo DateTime      @db.Date
  status        iuran_status  @default(aktif)
  kategori_id   Int           @db.UnsignedInt
  kategori      kategori      @relation(fields: [kategori_id], references: [id], onDelete: Cascade, map: "iuran_ibfk_1")
  tagihan       tagihan[]

  @@index([kategori_id], map: "kategori_id")
}

model jabatan {
  id         Int             @id @default(autoincrement()) @db.UnsignedInt
  nik        String          @db.VarChar(16)
  role_id    Int?            @db.UnsignedInt
  status     jabatan_status? @default(aktif)
  created_at DateTime        @default(now()) @db.Timestamp(0)
  updated_at DateTime        @default(now()) @db.Timestamp(0)
  role       role?           @relation(fields: [role_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "jabatan_ibfk_1")
  warga      warga           @relation(fields: [nik], references: [nik], onDelete: NoAction, onUpdate: NoAction, map: "jabatan_ibfk_2")

  @@index([nik], map: "nik")
  @@index([role_id], map: "role_id")
}

model kk {
  no_kk               String          @id @db.VarChar(20)
  rt_id               Int?            @unique(map: "rt_id_2") @db.UnsignedInt
  nik                 String?         @unique(map: "nik") @db.VarChar(16)
  kategori_id         Int             @db.UnsignedInt
  warga_kk_nikTowarga warga?          @relation("kk_nikTowarga", fields: [nik], references: [nik], onDelete: Cascade, map: "kk_ibfk_1")
  rukun_tetangga      rukun_tetangga? @relation(fields: [rt_id], references: [id], onDelete: Cascade, map: "kk_ibfk_2")
  tagihan             tagihan[]
  warga               warga[]

  @@index([kategori_id], map: "kategori_id")
}

model pengumuman {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  judul          String          @db.VarChar(100)
  subjek         String?         @db.VarChar(100)
  isi            String?         @db.Text
  tanggal        DateTime        @db.Date
  rt_id          Int?            @db.UnsignedInt
  rukun_tetangga rukun_tetangga? @relation(fields: [rt_id], references: [id], onUpdate: Restrict, map: "pengumuman_ibfk_1")

  @@index([rt_id], map: "rt_id")
}

model role {
  id      Int       @id @default(autoincrement()) @db.UnsignedInt
  nama    String    @db.VarChar(50)
  jabatan jabatan[]
  user    user[]
}

model rukun_tetangga {
  id         Int          @id @unique(map: "id") @default(autoincrement()) @db.UnsignedInt
  nama       String       @db.VarChar(50)
  kk         kk?
  pengumuman pengumuman[]
}

model tagihan {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  no_kk         String?         @db.VarChar(20)
  status        tagihan_status? @default(belum_lunas)
  tanggal_bayar DateTime?       @db.Date
  iuran_id      Int?            @db.UnsignedInt
  kk            kk?             @relation(fields: [no_kk], references: [no_kk], onDelete: Cascade, onUpdate: Restrict, map: "tagihan_ibfk_1")
  iuran         iuran?          @relation(fields: [iuran_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "tagihan_ibfk_2")

  @@index([iuran_id], map: "iuran_id")
  @@index([no_kk], map: "no_kk")
}

model user {
  id       Int     @id @default(autoincrement())
  nik      String? @unique(map: "nik_3") @db.VarChar(16)
  password String  @db.VarChar(60)
  role_id  Int?    @db.UnsignedInt
  role     role?   @relation(fields: [role_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_user_role")
  warga    warga?  @relation(fields: [nik], references: [nik], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")

  @@index([role_id], map: "fk_user_role")
  @@index([nik], map: "nik")
  @@index([nik], map: "nik_2")
}

model warga {
  nik                            String                   @id @db.VarChar(16)
  nama                           String                   @db.VarChar(100)
  no_kk                          String?                  @db.VarChar(20)
  jenis_kelamin                  warga_jenis_kelamin
  tempat_lahir                   String?                  @db.VarChar(100)
  tanggal_lahir                  DateTime?                @db.Date
  agama                          String?                  @db.VarChar(50)
  pendidikan                     String?                  @db.VarChar(100)
  jenis_pekerjaan                String?                  @db.VarChar(100)
  golongan_darah                 String?                  @db.VarChar(3)
  status_perkawinan              warga_status_perkawinan? @default(belum_kawin)
  tanggal_perkawinan             DateTime?                @db.Date
  status_hubungan_dalam_keluarga String?                  @db.VarChar(50)
  kewarganegaraan                String?                  @db.VarChar(50)
  no_paspor                      String?                  @db.VarChar(20)
  no_kitap                       String?                  @db.VarChar(20)
  ayah                           String?                  @db.VarChar(100)
  ibu                            String?                  @db.VarChar(100)
  jabatan                        jabatan[]
  kk_kk_nikTowarga               kk?                      @relation("kk_nikTowarga")
  user                           user?
  kk                             kk?                      @relation(fields: [no_kk], references: [no_kk], onUpdate: Restrict, map: "warga_ibfk_1")

  @@index([no_kk], map: "no_kk")
}

model kategori {
  id    Int     @id @default(autoincrement()) @db.UnsignedInt
  nama  String  @db.VarChar(50)
  iuran iuran[]
}

enum tagihan_status {
  lunas
  belum_lunas
}

enum jabatan_status {
  aktif
  nonaktif
}

enum warga_jenis_kelamin {
  laki_laki @map("laki-laki")
  perempuan
}

enum warga_status_perkawinan {
  kawin_tercatat
  belum_kawin
  cerai_hidup
  cerai_mati
}

enum iuran_status {
  aktif
  nonaktif
}
